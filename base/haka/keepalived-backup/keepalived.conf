 vrrp_script chk_haproxy {
        script "/etc/keepalived/health.sh"    #服务探测，返回0说明服务是正常的
        interval 1    #每隔1秒探测一次
        weight 2      #haproxy上线，权重加2；下线，权重减2
}
#
vrrp_instance VI_1 {        #双主实例1
    state MASTER            #ha1（172.16.7.10）为主，ha2（172.16.7.100）为备
    interface ens32
    virtual_router_id 88    #实例1的VRID为88
    garp_master_delay 1
    priority 100            #主（172.16.7.10）的优先级为100，从的（172.16.7.100）优先级为99
    advert_int 1
    authentication {
        auth_type PASS
        auth_pass 123456
    }
#
    virtual_ipaddress {
        172.17.7.88/16 dev ens32    #实例1的VIP
    }
    track_interface {
        ens32
    }
#
    track_script {        #脚本追踪
        chk_haproxy
    }
    notify_master "/etc/keepalived/notify.sh master"
    notify_backup "/etc/keepalived/notify.sh backup"
    notify_fault "/etc/keepalived/notify.sh fault"
}
vrrp_instance VI_2 {
    state BACKUP        #实例2在ha1（172.16.7.10）上是备，在ha2（172.16.7.100）上是主
    interface ens32
    virtual_router_id 188    #实例2的VRID是188
    garp_master_delay 1
    priority 200             #实例2在ha1上的优先级是200，在ha2上的优先级是201
    advert_int 1
    authentication {
        auth_type PASS
        auth_pass 123456
    }
#
    virtual_ipaddress {
        172.17.7.188/16 dev ens32    #实例2的VIP
    }
    track_interface {
        ens32
    }
#
    track_script {        #脚本追踪
        chk_haproxy
    }
} 
