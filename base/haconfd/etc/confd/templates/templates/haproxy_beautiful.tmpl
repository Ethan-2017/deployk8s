global
    maxconn 4096
    log /dev/log    local0
    log /dev/log    local1 notice
    #user haproxy
    #group haproxy

defaults
    log global
    mode    http
    option  httplog
    option  dontlognull
    option  redispatch
    retries 3
    maxconn 2000
    timeout connect 5000
    timeout client  50000
    timeout server  50000
    errorfile 400 /etc/haproxy/errors/400.http
    errorfile 403 /etc/haproxy/errors/403.http
    errorfile 408 /etc/haproxy/errors/408.http
    errorfile 500 /etc/haproxy/errors/500.http
    errorfile 502 /etc/haproxy/errors/502.http
    errorfile 503 /etc/haproxy/errors/503.http
    errorfile 504 /etc/haproxy/errors/504.http

frontend http-stats
        bind *:10081
        mode http
        stats enable
        stats realm DCOS\ Haproxy
        stats auth admin:zjdcos01
        stats uri /status
frontend http-in
    bind *:80
# frontend acl
{{range $svcs := ls "/registry/services/endpoints/kube-system"}}
	{{if $svc := printf "/registry/services/endpoints/kube-system/%s" $svcs }}
		{{range $spec := getvs $svc}}
			{{ $data := json $spec }}
			{{range $subset := $data.subsets}}
				{{if printf "%s" $subset}}
					{{range $port := $subset.ports}}
						{{if printf "%s" $port}}
							{{if eq $port.protocol "TCP" "HTTP"}}
    # {{$data.metadata.name}}-{{$port.protocol}}-{{$port.port}}
    acl {{$data.metadata.name}}-{{$port.protocol}}-{{$port.port}} path_beg -i {{$data.metadata.name}}-{{$port.port}}
    use_backend {{$data.metadata.name}}-{{$port.protocol}}-{{$port.port}} if {{$data.metadata.name}}-{{$port.port}}
							{{end}}
						{{end}}
					{{end}}
				{{end}}
			{{end}}
		{{end}}
	{{end}}
{{end}}
# bankend list
{{range $svcs := ls "/registry/services/endpoints/kube-system"}}
	{{if $svc := printf "/registry/services/endpoints/kube-system/%s" $svcs }}
		{{range $spec := getvs $svc}}
			{{ $data := json $spec }}
			{{range $subset := $data.subsets}}
				{{if printf "%s" $subset}}
					{{range $port := $subset.ports}}
						{{if printf "%s" $port}}
							{{if eq $port.protocol "TCP" "HTTP"}}
# {{$data.metadata.name}}-{{$port.protocol}}-{{$port.port}}
backend {{$data.metadata.name}}-{{$port.port}}
    balance leastconn 
								{{range $address := $subset.addresses}}
    server {{$data.metadata.name}}-{{$port.protocol}}-{{$address.ip}}-{{$port.port}} {{$address.ip}}:{{$port.port}} check inter 30000
								{{end}}
							{{end}}
						{{end}}
					{{end}}
				{{end}}
			{{end}}
		{{end}}
	{{end}}
{{end}}
