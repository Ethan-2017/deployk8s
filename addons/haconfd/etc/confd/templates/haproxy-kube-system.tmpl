global
    maxconn 4096
    log /dev/log    local0
    log /dev/log    local1 notice
    debug
    #user haproxy
    #group haproxy

defaults
    log global
    mode    http
    option  httplog
    option  dontlognull
    option  redispatch
    retries 3
    maxconn 2000
    timeout connect 5000
    timeout client  50000
    timeout server  50000
    errorfile 400 /etc/haproxy/errors/400.http
    errorfile 403 /etc/haproxy/errors/403.http
    errorfile 408 /etc/haproxy/errors/408.http
    errorfile 500 /etc/haproxy/errors/500.http
    errorfile 502 /etc/haproxy/errors/502.http
    errorfile 503 /etc/haproxy/errors/503.http
    errorfile 504 /etc/haproxy/errors/504.http

frontend http-stats
        bind *:10081
        mode http
        stats enable
        stats realm DCOS\ Haproxy
        stats auth admin:zjdcos01
        stats uri /status
frontend http-in
    bind *:80
#-------------------frontend acl list
{{range $svcs := ls "/registry/services/endpoints/kube-system"}}{{$svc := printf "/registry/services/endpoints/kube-system/%s" $svcs }} {{if $svc}}{{range $spec := getvs $svc}}{{ $data := json $spec }}{{range $subset := $data.subsets}}{{if printf "%s" $subset}}{{range $port := $subset.ports}}{{if printf "%s" $port}}{{if eq $port.protocol "TCP" "HTTP"}}
    # {{$data.metadata.name}}-{{$port.protocol}}-{{$port.port}}
    	acl ::{{$data.metadata.name}}-{{$port.protocol}}-{{$port.port}}-aclrule hdr(Host) -i {{$data.metadata.name}}.reg.dnt
    	use_backend ::{{$data.metadata.name}}-{{$port.protocol}}-{{$port.port}} if ::{{$data.metadata.name}}-{{$port.protocol}}-{{$port.port}}-aclrule {{end}}{{end}}{{end}}{{end}}{{end}}{{end}}{{end}}{{end}}

#-------------------bankend app list
{{range $svcs := ls "/registry/services/endpoints/kube-system"}}{{$svc := printf "/registry/services/endpoints/kube-system/%s" $svcs }}{{if $svc}}{{range $spec := getvs $svc}}{{ $data := json $spec }}{{range $subset := $data.subsets}}{{if printf "%s" $subset}}{{range $port := $subset.ports}}{{if printf "%s" $port}}{{if eq $port.protocol "TCP" "HTTP"}}
# {{$data.metadata.name}}-{{$port.protocol}}-{{$port.port}}
backend ::{{$data.metadata.name}}-{{$port.protocol}}-{{$port.port}}
	option accept-invalid-http-request
	option accept-invalid-http-response {{range $address := $subset.addresses}}
	cookie SESSION_COOKIE insert indirect nocache httponly secure
	#reqrep ^([^\ :]*)\ /{{$data.metadata.name}}     \1\2
    	server ::{{$data.metadata.name}}-{{$port.protocol}}-{{$address.ip}}-{{$port.port}} {{$address.ip}}:{{$port.port}} cookie {{$address.ip}}:{{$port.port}} weight 2 check inter 30000 fall 3{{end}}{{end}}{{end}}{{end}}{{end}}{{end}}{{end}}{{end}}{{end}}
